plugins {
    id 'application'
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

ext {
    protoPath = project.hasProperty('protoPath') ? project.protoPath : '../../models'
}

shadowJar {
    manifest {
        attributes(
                'Main-Class': 'bond.memo.mmorpg.GameServer'
        )
    }
    archiveBaseName.set('mmorpg-game-server')
    archiveClassifier.set('')
    archiveVersion.set('1.0.0-SNAPSHOT')
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'io.netty:netty-all:4.1.110.Final'
    implementation 'com.google.protobuf:protobuf-java:4.27.1'
    implementation 'com.google.inject:guice:7.0.0'
    implementation 'org.jeasy:easy-random-core:5.0.0'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'redis.clients:jedis:5.1.3'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.yaml:snakeyaml:1.33'

    implementation 'ch.qos.logback:logback-classic:1.4.12'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // test framework
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
    // gradle need this
    implementation libs.guava
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:4.27.1'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'bond.memo.mmorpg.GameServer'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated/source/proto/main/java']
        }
        proto {
            srcDirs = [protoPath]
        }
    }
}

tasks.compileJava.dependsOn(generateProto)